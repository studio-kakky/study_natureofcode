{"version":3,"sources":["chapter0_6_8.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,CAAC;AACb,IAAI,IAAI,CAAC;AACT,IAAI,OAAO,GAAG,CAAC,CAAC;AAChB,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,IAAI,SAAS,GAAG,IAAI,CAAA;;AAEpB,SAAS,KAAK,GAAE;AACd,cAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC9B,aAAW,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,GAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACnD,UAAQ,GAAG,EAAE,CAAC;AACd,MAAI,GAAG,EAAE,CAAA;CACV;;AAED,SAAS,IAAI,GAAG;AACd,YAAU,CAAC,GAAG,CAAC,CAAC;AAChB,WAAS,CAAC,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,EAAC,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,CAAC;AACX,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAM,CAAC,GAAG,CAAC,CAAC;AACZ,OAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,UAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAG,OAAO,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,CAAC,CAAC,CAAC;AACjF,UAAG,CAAC,IAAI,CAAC,EAAE;AACT,kBAAU,CAAC,KAAK,CAAC,CAAC;;AAElB,cAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,CAAC,CAAC;AACtD,cAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AACtC,gBAAQ,CAAC,KAAK,CAAC,CAAC;AAChB,YAAG,CAAC,IAAI,CAAC,EAAE;AACT,oBAAU,CAAC,KAAK,CAAC,CAAC;AAClB,gBAAM,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AACtC,gBAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AACpD,kBAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;OAGF,MAAM,IAAG,CAAC,IAAI,CAAC,EAAE;AAChB,kBAAU,CAAC,KAAK,CAAC,CAAA;AACjB,cAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AAC3B,cAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AACnD,gBAAQ,CAAC,KAAK,CAAC,CAAC;OACjB;AACD,YAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACf;GACF;AACD,SAAO,IAAI,WAAW,CAAC;CACxB","file":"chapter0_6_8.js","sourcesContent":["var gridSize;\nvar step;\nvar counter = 0;\nvar counterStep = 0.03;\nvar noiseStep = 0.03\n\nfunction setup(){\n  createCanvas(640, 360, WEBGL);\n  perspective(60 / 180 * PI, width/height, 0.1, 100);\n  gridSize = 10;\n  step = 60\n}\n\nfunction draw() {\n  background(255);\n  translate(-gridSize * step / 2,0,-500);\n  var xt = 0;\n  var points = [];\n  stroke(255);\n  for(var x = 0; x < step; x++) {\n    for(var z = 0; z < step; z++) {\n      var h = Math.floor(map(noise(x * noiseStep, z * noiseStep , counter),0,1,0,200));\n      if(z != 0) {\n        beginShape(LINES);\n\n        vertex(x * gridSize, points[z-1], (z - 1) * gridSize);\n        vertex(x * gridSize, h, z * gridSize);\n        endShape(LINES);\n        if(x != 0) {\n          beginShape(LINES);\n          vertex(x * gridSize, h, z * gridSize);\n          vertex((x - 1) * gridSize, points[z], z * gridSize);\n          endShape(LINES);\n        }\n\n\n      } else if(x != 0) {\n        beginShape(LINES)\n        vertex(x, h, z * gridSize);\n        vertex((x - 1) * gridSize, point[z], z * gridSize);\n        endShape(LINES);\n      }\n      points[z] = h;\n    }\n  }\n  counter += counterStep;\n}\n"],"sourceRoot":"/source/"}